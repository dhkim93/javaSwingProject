package com.bs.view;

import java.awt.Color;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

import com.bs.control.LoginPageDAO;
import com.bs.control.MyCartDAO;
import com.bs.vo.CartVO;
import com.bs.vo.ClosetBasicVO;

public class MyCart extends JPanel implements ActionListener {

	private JButton button_Buy, button_Del, button_Main;//구매, 삭제, 메인으로가기 버튼
	private JLabel label_pic1, label_pic2, label_pic3;// 이미지 출력 라벨
	private JLabel label_num1, label_num2, label_num3;// 장바구니에서 목록 순서(1,2,3...)
	private JLabel label_sumCh = new JLabel("総額 : ");// "총금액 : "
	private JPanel panel_bottom = new JPanel();// 4번 패널
	private JLabel label_sumNum = new JLabel("0won ");
	// 서버에서 데이터 가져오기 위해 초기화한 변수 2개
	private ArrayList<CartVO> list = null;
	private MyCartDAO mcdao = null;
	private List<JCheckBox> checkBoxes = new ArrayList<JCheckBox>();
	static JCheckBox chkButton[] = null;
	String cartCallBack = "N";// getCartImage() 재호출여부확인

	public MyCart(MainFrame win) {

		setBounds(new Rectangle(50, 50, 800, 550));
		setLayout(null);

		// 4번 패널
		panel_bottom.setBounds(12, 10, 789, 56);
		add(panel_bottom);
		panel_bottom.setLayout(null);

		button_Buy = new JButton("購買確定");// "구매확정"
		button_Buy.setBounds(226, 10, 130, 23);
		button_Buy.addActionListener(this);
		add(button_Buy);

		button_Del = new JButton("削除");// "삭제"
		button_Del.addActionListener(this);
		button_Del.setBounds(368, 10, 79, 23);
		add(button_Del);

		label_sumCh.setBounds(643, 10, 48, 15);
		panel_bottom.add(label_sumCh);

		label_sumNum.setBounds(703, 10, 55, 15);
		panel_bottom.add(label_sumNum);

		// 메인으로 가기 버튼
		button_Main = new JButton("メイン画面");// "메인화면"
		button_Main.setBounds(459, 10, 104, 23);
		button_Main.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (e.getSource() == button_Main) {
						win.panelChange("LoginPage", MainFrame.id);
					}
				} catch (Exception ex) {
					System.out.println(ex);
				}
			}
		});

		panel_bottom.add(button_Main);

	}

	@Override
	public void actionPerformed(ActionEvent ae) {

		String ae_type = ae.getActionCommand();
		if (ae_type.equals(button_Del.getText())) {// 삭제하기 버튼이 클릭되었을 경우
			try {
				ArrayList<CartVO> list = null;
				ArrayList<CartVO> listDel = null;

				list = mcdao.getCartAndImage(MainFrame.id);// cart에 있는 id정보를
															// 가져옴(deokhyoen으로
															// 설정한 것만...)
				String code = null;
				String id = null;
				String delComplete = "N";// 삭제가 잘 됐는지 체크!!!!!!
				if (list != null) {
					for (int i = 0; i < list.size(); i++) {
						JLabel c_id[] = new JLabel[list.size()];
						c_id[i] = new JLabel();
						c_id[i].setText(list.get(i).getId());
						JLabel label_pCode[] = new JLabel[list.size()]; // 제품코드
						label_pCode[i] = new JLabel();
						label_pCode[i].setText(list.get(i).getProductCode());// 제품명을가져와서글자를화면에뿌려줌
						/*
						 * System.out.println(label_pCode[i].getText());
						 * System.out.println(c_id[i].getText());
						 */
						System.out.println(checkBoxes.get(i).isSelected());
						// 삭제 되는 부분
						if (checkBoxes.get(i).isSelected()) {// 라디오 버튼이 눌렸을 경우
							System.out.println("$$$$$$$$$$$$" + (i + 1) + "번째 "
									+ checkBoxes.get(i).getText() + " 선택됨");
							code = label_pCode[i].getText();
							// id = c_id[i].getText() + "";
							listDel = mcdao.getDelete(MainFrame.id, code);
							delComplete = "Y";
							System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$$"
									+ label_pCode[i].getText());
						}// 체크박스 선택됐나 if end
					}// for문끝
						// 체크박스가 선택되지 않았을 때
					if (delComplete.equals("N")) {
						JOptionPane.showMessageDialog(this, "상품을 선택해주세요 ",	"お知らせ", 0);//상품을 선택해주세요.
					}// 체크박스가 선택됐을때
					else {
						JOptionPane.showMessageDialog(this, "상품을 삭제하였습니다. ","お知らせ", 0);//상품을 삭제했습니다.
					}
					repaintScreen();// 화면다시그리기
				}

			} catch (Exception e) {
				System.out.println("e=[" + e + "]");
				e.printStackTrace();
			}

		} else if (ae_type.equals(button_Buy.getText())) {
			System.out.println("구매버튼 클릭!!!");

			try {
				LoginPageDAO lpdao = new LoginPageDAO();// 옷장추가용
				ClosetBasicVO cbvo = null;// 옷장추가용
				ArrayList<ClosetBasicVO> buyList = new ArrayList();// 옷장추가용
				String productCode = "";// 옷장추가용

				ArrayList<CartVO> list = null;
				ArrayList<CartVO> listDel = null;

				list = mcdao.getCartAndImage(MainFrame.id);// cart에 있는 id정보를
															// 가져옴(deokhyoen으로
															// 설정한 것만...)
				String code = null;
				String id = null;
				String addComplete = "N";// 추가가 잘 됐는지 체크!!!!!!
				if (list != null) {
					for (int i = 0; i < list.size(); i++) {
						JLabel c_id[] = new JLabel[list.size()];
						c_id[i] = new JLabel();
						c_id[i].setText(list.get(i).getId());
						JLabel label_pCode[] = new JLabel[list.size()]; // 제품코드
						label_pCode[i] = new JLabel();
						label_pCode[i].setText(list.get(i).getProductCode());// 제품명을지정

						if (checkBoxes.get(i).isSelected()) {
							System.out.println("checkBoxes.is select " + i
									+ "번째 RADIO");
							productCode = label_pCode[i].getText();
							buyList = lpdao.getClothInfo(productCode);

							for (int j = 0; j < buyList.size(); j++) {

								lpdao.setClosetInfo(MainFrame.id, productCode);

								System.out
										.println("//////////////////////////////////////////"
												+ productCode
												+ buyList.get(0)
														.getProductName());
								addComplete = "Y";
								code = label_pCode[i].getText() + "";
								id = c_id[i].getText() + "";
								listDel = mcdao.getDelete(id, code);
								System.out.println("$$$$$$$$$$$$$$$$$$$$$$$$$"
										+ label_pCode[i].getText());
							}
						}// 체크박스 선택됐나 if end
					}// for문 끝
					if (addComplete.equals("N")) {
						JOptionPane.showMessageDialog(this, "상품을 선택해주세요 ",
								"お知らせ", 0);
					} else {
						JOptionPane.showMessageDialog(this, "選択した商品を購入しました。",
								"お知らせ", 0);// "선택한 상품을 구매하였습니다.", "알림"
					}
					repaintScreen();// 화면다시그리기
				}

			} catch (Exception ex) {
				ex.printStackTrace();
			}

		}
	}

	// 메인화면에서 장바구니 버튼 눌렀을때 실행
	public void getMyCartImage(String id) {

		// 서버에서 가져온 데이터로 글자 지정 부분
		try {
			panel_bottom.setBounds(12, 10, 789, 56);
			add(panel_bottom);
			panel_bottom.setLayout(null);

			button_Buy = new JButton("購買確定");// "구매확정"
			button_Buy.addActionListener(this);
			button_Buy.setBounds(226, 10, 130, 23);
			panel_bottom.add(button_Buy);

			button_Del = new JButton("削除");// "삭제"
			button_Del.addActionListener(this);
			button_Del.setBounds(368, 10, 79, 23);
			panel_bottom.add(button_Del);

			label_sumCh.setBounds(643, 10, 48, 15);
			panel_bottom.add(label_sumCh);

			label_sumNum.setBounds(703, 10, 55, 15);
			panel_bottom.add(label_sumNum);
			int sum = 0;// 합계 저장 변수
			label_sumNum.setText(sum + "won");// 합계가 0일때 출력

			ArrayList<CartVO> list = null;
			mcdao = new MyCartDAO();// 서버에서 가져온 값을 쓰기위해 DAO 객체화
			list = mcdao.getCartAndImage(id);// cart에 있는 id정보를 가져옴(deokhyoen으로
												// 설정한 것만...)
			ArrayList<CartVO> listDel = null;
			String code = null;
			// String id=null;
			// System.out.println(list.isEmpty());

			// list에 내용이 없을경우 대화상자 실행
			if (list.isEmpty()) {
				JOptionPane
						.showMessageDialog(null, "カ－トが　空いて　います.", "お知らせ ", 0);// 장바구니가
																				// 비어있습니다.,
																				// 알림
			}
			// list에 내용이 있을 경우 실행
			else {

				// System.out.println(list.get(0));
				// System.out.println("size " + list.size());
				int jpanelAxis = 70;
				int yAxis = 10;
				if (cartCallBack.equals("Y")) {// getMyCartImage()가 재호출 될 경우
					checkBoxes.clear();
				} else if (cartCallBack.equals("N")) {// getMyCartImage()가 재호출
														// 되지 않았을경우
					cartCallBack = "Y";
				}
				for (int i = 0; i < list.size(); i++) {

					System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@jpanelAxis :"
							+ jpanelAxis);

					JPanel jpanel[] = new JPanel[list.size()];
					jpanel[i] = new JPanel();
					jpanel[i].setBackground(Color.WHITE);

					jpanel[i].setBounds(10, jpanelAxis, 789, 153);
					add(jpanel[i]);
					jpanel[i].setLayout(null);

					JLabel label_num[] = new JLabel[list.size()];

					label_num[i] = new JLabel(Integer.toString(i + 1)); // 카트 순번
					label_num[i].setBounds(12, 10, 15, 15);
					jpanel[i].add(label_num[i]);
					jpanel[i].add(label_num[i]);

					JLabel label_pName[] = new JLabel[list.size()]; // 제품명
					label_pName[i] = new JLabel();
					label_pName[i].setBounds(193, 10, 70, 15);
					jpanel[i].add(label_pName[i]);

					JLabel label_pCode[] = new JLabel[list.size()]; // 제품코드
					label_pCode[i] = new JLabel();
					label_pCode[i].setBounds(266, 10, 61, 15);
					jpanel[i].add(label_pCode[i]);
					label_pCode[i].setVisible(false);// 코드 안보이게 하기

					JLabel label_price[] = new JLabel[list.size()];

					label_price[i] = new JLabel(); // 가격표
					label_price[i].setBounds(378, 10, 56, 15);
					jpanel[i].add(label_price[i]);

					// JRadioButton radioButton[] = new
					// JRadioButton[list.size()]; //라디오 버튼
					// radioButton[i] = (JRadioButton) new JRadioButton("선택");
					// radioButton[i].setBounds(533, 10, 67, 23);
					// radioButton[i].setBackground(Color.WHITE);
					// jpanel[i].add(radioButton[i]);
					// bg.add(radioButton[i]);

					chkButton = new JCheckBox[list.size()]; // 체크박스
					chkButton[i] = (JCheckBox) new JCheckBox(list.get(i)
							.getProductCode()); // 제품모델명
					chkButton[i].setBounds(533, 10, 100, 23);
					chkButton[i].setBackground(Color.WHITE);
					chkButton[i].setSelected(false);// 체크되어있는 체크박스 focus 끄기
					this.checkBoxes.add(chkButton[i]);
					jpanel[i].add(chkButton[i]);

					JPanel panel_pic[] = new JPanel[list.size()]; // 그림 패널
					panel_pic[i] = new JPanel();
					panel_pic[i].setBounds(39, 12, 142, 130);
					jpanel[i].add(panel_pic[i]);
					jpanel[i].add(panel_pic[i]);

					label_pName[i].setText(list.get(i).getProductName());
					label_price[i].setText(list.get(i).getPrice() + "won");// 가격을
																			// 가져와서
																			// 글자를
																			// 화면에
																			// 뿌려줌
					label_pCode[i].setText(list.get(i).getProductCode());// 제품명을
																			// 가져와서
																			// 글자를
																			// 화면에
																			// 뿌려줌
					sum += Integer.parseInt(list.get(i).getPrice());// 값을 모두더해서
																	// sum에 저장

					ImageIcon imgProd[] = new ImageIcon[list.size()];
					imgProd[i] = new ImageIcon(list.get(i).getImagePath());// 이미지
																			// 경로
																			// 받아옴

					System.out.println("!!!!!!!!!!!!!!" + list.get(i));

					JLabel label_pic[] = new JLabel[list.size()];
					label_pic[i] = new JLabel();

					label_pic[i] = new JLabel(imgProd[i]);
					label_pic[i].setBounds(50, 0, imgProd[i].getIconWidth(),
							imgProd[i].getIconHeight());

					panel_pic[i].add(label_pic[i]);

					jpanelAxis += 165;

				}// for end
				System.out.println("버튼 누르기 전@@@@@@   체크어레이 개수"
						+ checkBoxes.size());
				// System.out.println("버튼 누르기 전@@@@@@   생성된 체크박스 개수"+chkButton.length);
				label_sumNum.setText(sum + "원");// 총액 화면에 출력

			} // end if

		} catch (Exception e) {
			System.out.println("e=[" + e + "]");
			e.printStackTrace();
		}

	}

	// 화면 다시그리기
	public void repaintScreen() {

		repaint();
		revalidate();
		removeAll();
		try {
			System.out.println("다시그리기!!!");
			ArrayList<CartVO> list = null;
			mcdao = new MyCartDAO();// 서버에서 가져온 값을 쓰기위해 DAO 객체화
			list = mcdao.getCartAndImage(MainFrame.id);// cart에 있는 id정보를
														// 가져옴(deokhyoen으로
														// 설정한 것만...)
			ArrayList<CartVO> listDel = null;
			String code = null;
			// String id=null;

			panel_bottom.setBounds(12, 10, 789, 56);
			add(panel_bottom);
			panel_bottom.setLayout(null);

			button_Buy = new JButton("購買確定");// "구매확정"
			button_Buy.addActionListener(this);
			button_Buy.setBounds(226, 10, 130, 23);
			panel_bottom.add(button_Buy);

			button_Del = new JButton("削除");// "삭제"
			button_Del.addActionListener(this);
			button_Del.setBounds(368, 10, 79, 23);
			panel_bottom.add(button_Del);

			label_sumCh.setBounds(643, 10, 48, 15);
			panel_bottom.add(label_sumCh);

			label_sumNum.setBounds(703, 10, 55, 15);
			panel_bottom.add(label_sumNum);
			int sum = 0;// 합계 저장 변수

			label_sumNum.setText(sum + "won");// 합계가 0일때 출력
			// System.out.println(list.isEmpty());

			// list에 내용이 없을경우 대화상자 실행
			if (list.isEmpty()) {
				JOptionPane.showMessageDialog(null, "カ－トが　空いて　います", "お知らせ ", 0);// 장바구니가
																				// 비어있습니다.
																				// 알림
			}
			// list에 내용이 있을 경우 실행
			else {
				System.out
						.println("===========================================================================================");
				// System.out.println(list.get(0));
				// System.out.println("size " + list.size());

				int jpanelAxis = 70;
				int yAxis = 10;
				checkBoxes.clear();
				for (int i = 0; i < list.size(); i++) {
					JPanel jpanel[] = new JPanel[list.size()];
					jpanel[i] = new JPanel();
					jpanel[i].setBackground(Color.WHITE);

					jpanel[i].setBounds(10, jpanelAxis, 789, 153);
					add(jpanel[i]);
					jpanel[i].setLayout(null);

					JLabel label_num[] = new JLabel[list.size()];

					label_num[i] = new JLabel(Integer.toString(i + 1)); // 카트
																		// 순번
					label_num[i].setBounds(12, 10, 15, 15);
					jpanel[i].add(label_num[i]);

					JLabel label_pName[] = new JLabel[list.size()]; // 제품명
					label_pName[i] = new JLabel();
					label_pName[i].setBounds(193, 10, 70, 15);
					jpanel[i].add(label_pName[i]);

					JLabel label_pCode[] = new JLabel[list.size()]; // 제품코드
					label_pCode[i] = new JLabel();
					label_pCode[i].setBounds(266, 10, 61, 15);
					jpanel[i].add(label_pCode[i]);
					label_pCode[i].setVisible(false);// 코드 안보이게 하기

					JLabel label_price[] = new JLabel[list.size()];

					label_price[i] = new JLabel(); // 가격표
					label_price[i].setBounds(378, 10, 56, 15);
					jpanel[i].add(label_price[i]);

					// JRadioButton radioButton[] = new
					// JRadioButton[list.size()]; //라디오 버튼
					/*
					 * radioButton[i] = (JRadioButton) new JRadioButton("선택");
					 * radioButton[i].setBounds(533, 10, 67, 23);
					 * radioButton[i].setBackground(Color.WHITE);
					 * jpanel[i].add(radioButton[i]); bg.add(radioButton[i]);
					 */

					chkButton = new JCheckBox[list.size()]; // 체크박스
					chkButton[i] = (JCheckBox) new JCheckBox(list.get(i)
							.getProductCode()); // 제품모델명
					chkButton[i].setBounds(533, 10, 100, 23);
					chkButton[i].setBackground(Color.WHITE);
					chkButton[i].setSelected(false);// 체크되어있는 체크박스 focus 끄기
					this.checkBoxes.add(chkButton[i]);
					jpanel[i].add(chkButton[i]);

					JPanel panel_pic[] = new JPanel[list.size()]; // 그림 패널
					panel_pic[i] = new JPanel();
					panel_pic[i].setBounds(39, 12, 142, 130);
					jpanel[i].add(panel_pic[i]);

					label_pName[i].setText(list.get(i).getProductName());
					label_price[i].setText(list.get(i).getPrice() + "won");// 가격을
																			// 가져와서
																			// 글자를
																			// 화면에
																			// 뿌려줌
					label_pCode[i].setText(list.get(i).getProductCode());// 제품명을
																			// 가져와서
																			// 글자를
																			// 화면에
																			// 뿌려줌
					sum += Integer.parseInt(list.get(i).getPrice());// 값을
																	// 모두더해서
																	// sum에
																	// 저장

					ImageIcon imgProd[] = new ImageIcon[list.size()];
					imgProd[i] = new ImageIcon(list.get(i).getImagePath());// 이미지
																			// 경로
																			// 받아옴

					JLabel label_pic[] = new JLabel[list.size()];
					label_pic[i] = new JLabel();

					label_pic[i] = new JLabel(imgProd[i]);
					label_pic[i].setBounds(50, 0, imgProd[i].getIconWidth(),
							imgProd[i].getIconHeight());

					panel_pic[i].add(label_pic[i]);

					jpanelAxis += 165;

				}// for end
				System.out.println("버튼 누른후 @@@@@@   체크어레이 개수"
						+ checkBoxes.size());
				// System.out.println("버튼 누른후@@@@@@   생성된 체크박스 개수"+chkButton.length);
				label_sumNum.setText(sum + "원");// 합계가 0이 아닐때의 총액 화면에 출력
			} // end if
		} catch (Exception e) {
			System.out.println("e=[" + e + "]");
			e.printStackTrace();
		}
	}
}
