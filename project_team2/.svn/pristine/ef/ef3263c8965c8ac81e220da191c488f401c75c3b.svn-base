package com.bs.view;

import java.awt.Color;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import com.bs.control.LoginPageDAO;
import com.bs.vo.ClosetBasicVO;
import com.bs.vo.ClosetVO;
import com.bs.vo.MemberVO;

public class LoginPage extends JPanel implements ActionListener {

	private JButton button_2;
	private JButton button_3;
	private JPanel panel = new JPanel();
	private JPanel panel2 = new JPanel();
	private JTextField textFieldId;
	private JTextField textFieldPass;
	private JButton btnLogin = new JButton("로그인");
	private JButton btnJoin = new JButton("회원가입");
	private JButton btnNewButton = new JButton("내 옷장");
	private LoginPageDAO lpdao = null;
	int sum = 0;// 합계 저장 변수
	private JLabel label_sumNum = new JLabel();
	private String loginFlag = "N"; // 로그인 여부
//	private JRadioButton radioButton[] = null; //라디오 버튼
	private List<JCheckBox> checkBoxes = new ArrayList<JCheckBox>();
	
	static JCheckBox chkButton[] = null;
	
	private JLabel label_pCode[] = null; // 제품코드
	private JLabel label_pName[] = null; // 제품명
	private JLabel label_pSize[] = null; // 제품사이즈
	private JLabel label_pBrand[] = null; // 제품브랜드
	private JLabel label_pMaterial[] = null; // 제품브랜드
	private ArrayList<ClosetBasicVO> list = null;
	
//	private  ButtonGroup test = new ButtonGroup();
//	private  CheckboxGroup test = new CheckboxGroup();
//	private ButtonGroup test = new ButtonGroup();

	public LoginPage(MainFrame win) {
		setBackground(Color.WHITE);
		this.setOpaque(false);
		setBounds(new Rectangle(50, 50, 800, 550));
		setLayout(null);

		panel.setBackground(Color.WHITE);
		panel.setBounds(12, 26, 220, 205);
		add(panel);
		panel.setLayout(null);

		// 로그인 버튼 클릭 이벤트
		btnLogin = new JButton("로그인");
		btnLogin.setBounds(121, 159, 87, 23);
		panel.add(btnLogin);

		JLabel lblNewLabel = new JLabel("Pass");
		lblNewLabel.setBounds(18, 89, 29, 15);
		panel.add(lblNewLabel);

		JLabel label_6 = new JLabel("로그인");
		label_6.setBounds(18, 9, 69, 15);
		panel.add(label_6);

		JLabel label_7 = new JLabel("ID");
		label_7.setBounds(18, 58, 29, 15);
		panel.add(label_7);

		textFieldPass = new JTextField();
		textFieldPass.setBounds(58, 86, 116, 21);
		panel.add(textFieldPass);
		textFieldPass.setColumns(10);
		btnJoin.setBounds(18, 159, 91, 23);
		panel.add(btnJoin);
		btnJoin.addActionListener(this);
		
		textFieldId = new JTextField();
		textFieldId.setBounds(58, 55, 116, 21);
		panel.add(textFieldId);
		textFieldId.setColumns(10);
		btnLogin.addActionListener(this);

		button_3 = new JButton("카트담기");
		button_3.setBounds(573, 26, 127, 23);
		button_3.addActionListener(this);
		add(button_3);

		button_2 = new JButton("구매하기");
		button_2.setBounds(712, 26, 127, 23);
		button_2.addActionListener(this);
		add(button_2);

		btnNewButton.setBounds(44, 272, 158, 40);
		add(btnNewButton);

		JButton button_1 = new JButton("게시판");
		button_1.setBounds(44, 355, 158, 40);
		button_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (e.getSource() == button_1 && loginFlag.equals("N")) { // 로그인을
																				// 안했을경우
						return;
					} else {
						win.panelChange("Board", textFieldId.getText());
					}
				} catch (Exception ex) {
					System.out.println(ex);
				}
			}
		});

		add(button_1);

		JButton button_4 = new JButton("장바구니");
		button_4.setBounds(44, 444, 158, 40);
		button_4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (e.getSource() == button_4 && loginFlag.equals("N")) { // 로그인을
																				// 안했을경우
						return;
					} else {
						win.panelChange("MyCart", textFieldId.getText());
					}
				} catch (Exception ex) {
					System.out.println(ex);
				}
			}
		});

		add(button_4);

		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.WHITE);
		panel_1.setBounds(12, 244, 220, 308);
		add(panel_1);

		// 내옷장으로 가기 버튼 클릭
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (e.getSource() == btnNewButton && loginFlag.equals("N")) { // 로그인을 안했을경우
						return;
					} else {
						win.panelChange("MyDressRoom", textFieldId.getText());
					}
				} catch (Exception ex) {
					ex.printStackTrace();
				}
			}
		});

		// label_sumNum.setBounds(703, 10, 55, 15);
		// add(label_sumNum);

		try { // 상품 화면 조회하기
//			ArrayList<ClosetBasicVO> list = null;
			lpdao = new LoginPageDAO();// 서버에서 가져온 값을 쓰기위해 DAO 객체화
			list = lpdao.getProductInfo();// 
			// list에 내용이 있을경우 실행
			if (list != null) {

				int jpanelAxisLeft = 70; // 패널 위치 변수
				int jpanelAxisRight = 70; // 패널 위치 변수

				for (int i = 0; i < list.size(); i++) {

					System.out.println("jpanelAxis :" + jpanelAxisLeft);

					JPanel jpanel[] = new JPanel[list.size()];
					jpanel[i] = new JPanel();
					jpanel[i].setBackground(Color.WHITE);

					if (i % 2 == 0) {
						jpanel[i].setBounds(250, jpanelAxisLeft, 290, 153);
						jpanelAxisLeft += 165;
					} else {
						jpanel[i].setBounds(550, jpanelAxisRight, 290, 153);
						jpanelAxisRight += 165;
					}

					add(jpanel[i]);

					jpanel[i].setLayout(null);

					JLabel label_num[] = new JLabel[list.size()];
					label_num[i] = new JLabel(Integer.toString(i + 1)); // 상품 순번
					label_num[i].setBounds(12, 10, 15, 15);
					jpanel[i].add(label_num[i]);

					JLabel label_pName[] = new JLabel[list.size()]; // 제품명
					label_pName[i] = new JLabel();
					label_pName[i].setBounds(193, 10, 70, 15);
					jpanel[i].add(label_pName[i]);
					
					JLabel label_pSize[] = new JLabel[list.size()]; // 제품사이즈
					label_pSize[i] = new JLabel(); // 사이즈
					label_pSize[i].setBounds(193, 30, 70, 15);
					jpanel[i].add(label_pSize[i]);
					
					JLabel label_pBrand[] = new JLabel[list.size()]; // 제품브랜드
					label_pBrand[i] = new JLabel(); // 사이즈
					label_pBrand[i].setBounds(193, 50, 70, 15);
					jpanel[i].add(label_pBrand[i]);
					
					JLabel label_pMaterial[] = new JLabel[list.size()]; // 제품소재
					label_pMaterial[i] = new JLabel(); // 사이즈
					label_pMaterial[i].setBounds(193, 70, 70, 15);
					jpanel[i].add(label_pMaterial[i]);

					JLabel label_pCode[] = new JLabel[list.size()]; // 제품코드
					label_pCode[i] = new JLabel();
//					label_pCode[i].setBounds(193, 80, 70, 15);
					jpanel[i].add(label_pCode[i]);
//					label_pCode[i].setVisible(false);// 코드 안보이게 하기

					JLabel label_price[] = new JLabel[list.size()];

					label_price[i] = new JLabel(); // 가격표
					label_price[i].setBounds(193, 90, 70, 15);
					jpanel[i].add(label_price[i]);
					
					chkButton =  new JCheckBox[list.size()]; //  체크박스
					chkButton[i] = (JCheckBox) new JCheckBox(list.get(i).getProductCode());  //제품 모델명을 넣어준다.
					chkButton[i].setBounds(193, 110, 150, 23);
					chkButton[i].setBackground(Color.WHITE);
					this.checkBoxes.add(chkButton[i]);
					
					
//					test.add(chkButton[i]);  //체크박스 그룹 만들기 
//					add(new Checkbox("one", cbg, true));
					jpanel[i].add(chkButton[i]);

//					radioButton = new JRadioButton[list.size()]; // 라디오버튼
//					radioButton[i] = (JRadioButton) new JRadioButton("선택");
//					radioButton[i].setBounds(193, 110, 67, 23);
//					radioButton[i].setBackground(Color.WHITE);
//					test.add(radioButton[i]); //라디오 버튼 그룹을 지정한다.
//					jpanel[i].add(radioButton[i]);

					JPanel panel_pic[] = new JPanel[list.size()]; // 그림 패널
					panel_pic[i] = new JPanel();
					panel_pic[i].setBounds(39, 12, 142, 130);
					jpanel[i].add(panel_pic[i]);

					label_pName[i].setText("- "+list.get(i).getProductName()); //제품명
					label_price[i].setText(list.get(i).getPrice() + "원");// 가격
					
					label_pCode[i].setText(list.get(i).getProductCode());// 제품코드
//					chkButton[i].add(label_pCode[i]);  //체크 박스에 제품코드를 추가한다.
					
					label_pSize[i].setText("- "+list.get(i).getSize());// 제품사이즈
					label_pBrand[i].setText("- "+list.get(i).getBrand());// 제품 브랜드
					label_pMaterial[i].setText("- "+list.get(i).getMaterial());// 제품 소재
					
					sum += list.get(i).getPrice();// 값을 모두더하기

					ImageIcon imgProd[] = new ImageIcon[list.size()];
					imgProd[i] = new ImageIcon(list.get(i).getImagePath());

					System.out.println("!!!!!!!!!!!!!!" + list.get(i));

					JLabel label_pic[] = new JLabel[list.size()];
					label_pic[i] = new JLabel();
					label_pic[i] = new JLabel(imgProd[i]);
					label_pic[i].setBounds(50, 0, imgProd[i].getIconWidth(), imgProd[i].getIconHeight());

					panel_pic[i].add(label_pic[i]);

				} // for end

			} // end if

		} catch (Exception e) {
			System.out.println("e=[" + e + "]");
			e.printStackTrace();
		}

		setVisible(true);
	}

	// 버튼 클릭 이벤트
	@Override
	public void actionPerformed(ActionEvent e) {
		try {
			// System.out.println("실행 되나 안되나 ");

			if (e.getSource() == btnLogin) { // 로그인 버튼 클릭 이벤트

				if (textFieldId.getText().equals("")) { // 아이디를 입력하지 않았을때
					JOptionPane.showMessageDialog(btnLogin, "아이디를 입력해주세요", "경고", 0);
					System.out.println("아이디를 입력해주세요. ");
					return;
				} else if (textFieldPass.getText().equals("")) { // 패스워드를 입력안했을때
					JOptionPane.showMessageDialog(btnLogin, "패스워드를 입력해주세요", "경고", 0);
					System.out.println("패스워드를 입력해주세요. ");
					return;
				} else if (textFieldId.getText() != null && textFieldPass.getText() != null) { // 둘다
																								// 입력했으면

					LoginPageDAO lpdao = new LoginPageDAO();
					ArrayList<MemberVO> list = lpdao.getMemberList(textFieldId.getText()); // DB조회

					if (list.size() == 0) { // 조회를 못해왔으면
						JOptionPane.showMessageDialog(btnLogin, "해당하는 사용자가 없습니다.", "경고", 0);
						System.out.println("해당하는 사용자가 없습니다.");
						return;

					} else if (!list.get(0).getPassword().equals(textFieldPass.getText())) { // 패스워드
																								// 틀리면
						JOptionPane.showMessageDialog(btnLogin, "패스워드가 틀렸습니다.", "경고", 0);
						System.out.println("패스워드가 틀렸습니다.");
						return;
					} else { // 아이디 패스워드가 맞으면
						System.out.println("로그인 성공!!!");
						loginFlag = "Y"; // 로그인 여부 Y 로 변경
						MainFrame.id = textFieldId.getText(); //id 넘겨주기
						panel.setVisible(false);
						panel2.setBackground(Color.WHITE);
						panel2.setBounds(12, 26, 220, 205);
						panel2.setLayout(null);
						JLabel label_9 = new JLabel(textFieldId.getText() + " 님 환영합니다"); // 환영메시지 출력
						label_9.setBounds(50, 80, 200, 50);
						panel2.add(label_9);
						add(panel2);

					}

				}

			} else if (e.getSource() == btnJoin) { // 회원가입 버튼 클릭 했을때

				MemberJoin join = new MemberJoin();
				join.setVisible(true);

			} else if(e.getSource() == button_2 && loginFlag.equals("Y")){ //구매하기 버튼 클릭 했을때 (로그인 상태일때)
				System.out.println("구매버튼 클릭함");
				
				try{
					LoginPageDAO lpdao = new LoginPageDAO();
					ClosetBasicVO cbvo = null;
					ArrayList<ClosetBasicVO> buyList = new ArrayList();
					String productCode = "";

					for (int i = 0; i < checkBoxes.size(); i++) {
//						System.out.println("checkBoxes.is select " + checkBoxes.get(i).isSelected());
						if(checkBoxes.get(i).isSelected()){
							System.out.println("checkBoxes.is select " + checkBoxes.get(i).getText());
							productCode = checkBoxes.get(i).getText();
							buyList = lpdao.getClothInfo(productCode);
							
							for (int j = 0; j < buyList.size(); j++) {
								cbvo = new ClosetBasicVO(MainFrame.id, productCode, buyList.get(0).getProductName(), buyList.get(0).getBuyDate()); 
								lpdao.setClosetInfo(cbvo);
								JOptionPane.showMessageDialog(btnLogin, "선택한 상품을 구매하였습니다.", "알림", 0);
							}
						}
					}

				}catch(Exception ex){
					ex.printStackTrace();
				}
				
			}else if(e.getSource() == button_3 && loginFlag.equals("Y")){ //카트에 담기 버튼 클릭했을때 (로그인상태일때)
				System.out.println("카트에 담기 버튼 클릭함");
				try{
					LoginPageDAO lpdao = new LoginPageDAO();
					ArrayList<ClosetBasicVO> cartList = new ArrayList();
					String productCode = "";

					for (int i = 0; i < checkBoxes.size(); i++) {
//						System.out.println("checkBoxes.is select " + checkBoxes.get(i).isSelected());
						if(checkBoxes.get(i).isSelected()){
							System.out.println("checkBoxes.is select " + checkBoxes.get(i).getText());
							productCode = checkBoxes.get(i).getText();
							cartList = lpdao.getClothInfo(productCode);
							
							for (int j = 0; j < cartList.size(); j++) {
								lpdao.setCartInfo(cartList, MainFrame.id);
								JOptionPane.showMessageDialog(btnLogin, "선택한 상품을 카트에 담았습니다.", "알림", 0);
								
							}
						}
					}

				}catch(Exception ex){
					ex.printStackTrace();
				}
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
}
