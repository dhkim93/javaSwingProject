/* 
 * =============================
 * 프로그램 설명 : 
 * 작성자 : 
 * 최초 작성일자 : 
 * 최종 수정일 : 
 * 수정 내용 : 
 * =============================
 * */

package com.bs.view;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import com.bs.control.AdminPageDAO;
import com.bs.control.BoardDAO;
import com.bs.util.LabelAccessory;
import com.bs.vo.AdminPageVO;
import com.bs.vo.ClothBasicVO;

public class AdminPage extends JPanel implements ActionListener,MouseListener,MouseMotionListener {
	private JButton btnProdIns,btnProdDel;
	private JRadioButton rbutton1, rbutton2, rbutton3, rbutton4;
	private JTable adminTable;
	String selectedPdt = null;
	private MainFrame win = null;
	
	int xAxis=0;
	int yAxis=0;

	public AdminPage(MainFrame win) {
		this.win = win;
	}

	// 화면 새로 고침 메서드
	public void getRefresh(String id) throws Exception {
		
		 JButton btn1, btn2;
		 DefaultTableModel tablemodel; /* addRow를 호출하기 위한 선언 */
		 
		 ButtonGroup ct;
		 JButton btnMain = new JButton("메인으로");
		 btnProdIns = new JButton("물품등록");
		 btnProdDel = new JButton("물품삭제");
		 JButton btnUdt = new JButton("수정사항저장");
		adminTable = new JTable(new AdminModel(null)); // 테이블 생성
		adminTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		adminTable.addMouseListener(this);
		
		JScrollPane scrollPane = new JScrollPane(adminTable);
		scrollPane.setLocation(0, 0);
		
		System.out.println("AdminModel.data.length : " + AdminModel.data.length);
		
		scrollPane.setSize(600, 550);
		add(scrollPane);

		JPanel panel_comp = new JPanel();
		/* DefaultTableModel을 구현하여 JTable을 생성한다. */
		setLayout(null);

		panel_comp.setBounds(600, 30, 300, 530);
		// panel_comp.setBackground(Color.WHITE);
		add(panel_comp);
		panel_comp.setLayout(null);

		setLayout(null);

		Panel panel = new Panel(new FlowLayout());
		panel.setBounds(471, 0, 313, 512);

		// "모 자"
		rbutton1 = new JRadioButton("帽　　子");
		rbutton1.setBounds(0, 0, 100, 20);
		panel_comp.add(rbutton1);
//		System.out.println(rbutton1.getText());
		// "상 의"
		rbutton2 = new JRadioButton("上　　着");
		rbutton2.setBounds(0, 30, 100, 20);
		panel_comp.add(rbutton2);
		// "하 의"
		rbutton3 = new JRadioButton("ズ　ボ　ン");
		rbutton3.setBounds(0, 60, 100, 20);
		panel_comp.add(rbutton3);
		// "신 발"
		rbutton4 = new JRadioButton("　　靴　　");
		rbutton4.setBounds(0, 90, 100, 20);
		panel_comp.add(rbutton4);

		ct = new ButtonGroup();
		ct.add(rbutton1);
		ct.add(rbutton2);
		ct.add(rbutton3);
		ct.add(rbutton4);

		btnProdIns.setBounds(150, 0, 112, 23);
		btnProdDel.setBounds(150, 397, 112, 23);
		btnUdt.setBounds(150, 447, 112, 23);
		btnMain.setBounds(150, 497, 112, 23);

		btnProdIns.addActionListener(this);
		btnProdDel.addActionListener(this);
		panel_comp.add(btnProdDel);
		panel_comp.add(btnProdIns);
		panel_comp.add(btnUdt);
		panel_comp.add(btnMain);

		/* 화면의 레이아웃을 구성함 */

		add(panel);
		add(adminTable.getTableHeader(), BorderLayout.NORTH);
		setSize(900, 600);
		setVisible(true);

		btnUdt.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				ArrayList list = new ArrayList();
				AdminPageDAO apdao = new AdminPageDAO();
				int result = 0;

				try {
					
					if (e.getSource() == btnUdt && !AdminModel.udtList.isEmpty()) { //수정사항이 있다면. (수정된 행번호를 리스트로가져온다.)
						
						System.out.println("AdminModel.udtList.get(0)" + AdminModel.udtList.get(0));
						
						int dialogResult = JOptionPane.showConfirmDialog(null, "수정사항을 저장하시겠습니까?", "お知らせ", 0); // 수정사항을 저장하시겠습니까?
						if (dialogResult == JOptionPane.YES_OPTION) {
							
							for (int i = 0; i < AdminModel.udtList.size(); i++) { //데이터 row 만큼 update 한다.
								
								for (int j = 0; j < 6; j++) { // 물품명, 사이즈, 브랜드 , 가격, 소재
									// System.out.print(AdminModel.data[i][j]);
									list.add(AdminModel.data[Integer.parseInt(AdminModel.udtList.get(i).toString())][j]);//data[row][column]
								}
								
								result += apdao.updateAdminPage(list);
								//list.removeAll(list);
								list.clear();
								
							}
							
							
							if (result != AdminModel.udtList.size()) { //모든행을 업데이트 하지 않았을경우
								JOptionPane.showMessageDialog(null, "데이터 변경을 실패했습니다.", "경고", 0);// "경고"
								return;
							}else{
								JOptionPane.showMessageDialog(null, "데이터 변경을 성공했습니다.", "알림", 0);// "경고"
							}
							AdminModel.udtList.clear();
						}
					}else if(e.getSource() == btnUdt && AdminModel.udtList.isEmpty()){
						JOptionPane.showMessageDialog(null, "데이터 수정사항이 없습니다.", "알림", 0);// "경고"
					}
					
				} catch (Exception ex) {
					JOptionPane.showMessageDialog(null, "데이터 변경을 실패했습니다.", "경고", 0);// "경고"
					ex.printStackTrace();
				}
			}
		});

		btnMain.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (e.getSource() == btnMain) {
						win.panelChange("LoginPage", MainFrame.id);
					}
				} catch (Exception ex) {
					ex.printStackTrace();
				}
			}
		});
	}

	public void actionPerformed(ActionEvent e) {

		/* 추가 버튼이 눌린 경우 */
		try {
			//System.out.println("@@@@@@@@@@@@@@@@@ae_type" + e);
		/*	int test = 1;
			System.out.println(test);*/
			
			if (e.getSource() == btnProdIns) {
				if(rbutton1.isSelected()){
					System.out.println(rbutton1.getText()+"버튼이 눌렸음");
					xAxis=100; yAxis=110;
					productUpload();
					
				}else if(rbutton2.isSelected()){
					
					System.out.println(rbutton2.getText()+"버튼이 눌렸음");
					xAxis=97; yAxis=235;
					productUpload();
				}else if(rbutton3.isSelected()){	
					
					System.out.println(rbutton3.getText()+"버튼이 눌렸음");
					xAxis=97; yAxis=309;
					productUpload();
				}else if(rbutton4.isSelected()){	
					
					System.out.println(rbutton4.getText()+"버튼이 눌렸음");
					xAxis=95; yAxis=385;
					productUpload();
				}else {
					JOptionPane.showMessageDialog(null, "라디오 버튼을 선택해주세요.", "경고", 0);// "경고"
				}				
			} else if(e.getSource() == btnProdDel){
				System.out.println("삭제버튼이 눌렸음");
				AdminPageDAO apdao = new AdminPageDAO();
				AdminPageVO avo = new AdminPageVO();
				ArrayList<AdminPageVO> list = null;
				ArrayList<ClothBasicVO> listCloset = null;
				
				
				int dialogResult = JOptionPane.showConfirmDialog(null, "選択した掲示物を削除しますか", "選択", 0); // 컨펌
				if (dialogResult == JOptionPane.YES_OPTION) { //예 눌렀을때
//					System.out.println("@@@@@@@@@@@@@@@@@@" + selectedNum);
					int result = apdao.getDeleteCloth(selectedPdt);//옷정보테이블에서 삭제
					result += apdao.getDeleteImage(selectedPdt);//이미지테이블에서 삭제
//					int i = bdao.delBoardContent(selectedNum);  //게시글 번호로 조회해서 삭제 
					
					if(result ==1 || result ==0){ //삭제 실패									삭제를 실패했습니다", "경고"
						JOptionPane.showMessageDialog(null, "削除失敗しました。", "警告", 0);
						return;
						
					}else if(result==2){														//삭제성공", "알림"
						JOptionPane.showMessageDialog(null, "削除成功", "お知らせ", 0);
						win.panelChange("AdminPage", MainFrame.id);
						selectedPdt = null; //선택한 번호 초기화
					}
				}else{ //아니요 눌렀을때 
					return;
				}
				
			}
				

		} catch (Exception ee) {
			ee.printStackTrace();
		}

	}
	
	public void productUpload() throws Exception{
		
		AdminPageDAO apdao = new AdminPageDAO();
		AdminPageVO avo = new AdminPageVO();
		ArrayList<AdminPageVO> list = null;
		ArrayList updateList = new ArrayList();

		list = apdao.getAdminList();
		String pCode = null;//원래 코드
		String plusCode = null;//+1한 코드

		int cp = 0;// 맨마지막값을 가져오기위해 사용하는 변수
		int plusNum = 0;// +1해주기 위한 변수
		
		JFileChooser fs = new JFileChooser(new File("c:\\"));// 파일 오픈 경로
		fs.setDialogTitle("Open a File");// 파일 오픈 시 다이얼로그 제목
		fs.setFileFilter(new FileNameExtensionFilter("jpg", "png"));// 오픈할수
																	// 있는
																	// 파일
																	// 종류
		LabelAccessory accessory = new LabelAccessory(fs);
		fs.setAccessory(accessory);
		fs.addPropertyChangeListener(JFileChooser.SELECTED_FILE_CHANGED_PROPERTY,accessory);
		int result = fs.showSaveDialog(this);
		if (result == JFileChooser.APPROVE_OPTION) {
			try {
				System.out.println("당신의 선택은"+ fs.getSelectedFile().getName());// 파일이름
				File fi = fs.getSelectedFile();
				System.out.println("이미지 경로는" + fi.getPath());// 파일경로
				if (list != null) {
					for (int i = 0; i < list.size(); i++) {
						if (list.get(i).getProductCode().contains("P_CAP")&& rbutton1.isSelected()) {
							if (i > cp) {
								cp = i;
								pCode = list.get(i).getProductCode();
							}
						}else if (list.get(i).getProductCode().contains("P_UP")&& rbutton2.isSelected()) {
							if (i > cp) {
								cp = i;
								pCode = list.get(i).getProductCode();
							}
						}else if (list.get(i).getProductCode().contains("P_DOWN")&& rbutton3.isSelected()) {
							if (i > cp) {
								cp = i;
								pCode = list.get(i).getProductCode();
							}
						}else if (list.get(i).getProductCode().contains("P_SHOE")&& rbutton4.isSelected()) {
							if (i > cp) {
								cp = i;
								pCode = list.get(i).getProductCode();
							}
						}
					}
					System.out.println("pCode 저장!!" + pCode);
					String lastNum = pCode.substring(pCode.length() - 2, pCode.length());
					plusNum = Integer.parseInt(lastNum) + 1;
					plusCode = String.format(pCode.substring(0, pCode.length() - 2)+ "%02d", plusNum);
					System.out.println("change2 값   : " + plusCode);
					apdao.setAdminList(plusCode, "H");// +1한 값과 'H'를 제품코드와 제품명으로db에 저장
					
					
					byte[] buf =  new byte[1024];
					FileInputStream  fin = null;
					FileOutputStream fout = null;
					
					File imgPath = new File("img"); //img 폴더 경로를 가져온다
					
					File oldFile = new File(fi.getPath());
					File newFile = new File(imgPath+ "\\" +plusCode+".png");
					
					buf = new byte[1024];
					fin = new FileInputStream(oldFile);
					fout = new FileOutputStream(newFile);
					int read = 0;
					
					while((read=fin.read(buf, 0, buf.length))!=-1){
						fout.write(buf, 0, read);
					}
					
					JOptionPane.showMessageDialog(null, "파일 업로드 성공.", "알림", 0);// "경고"
					fin.close();
					fout.close();
					
					avo.setProductCode(plusCode);
					avo.setxAxis(xAxis);
					avo.setyAxis(yAxis);
					apdao.setImageList(avo);
					win.panelChange("AdminPage", MainFrame.id);
				}

			} catch (Exception e2) {
				JOptionPane.showMessageDialog(null, e2.getMessage());
			}
		}
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		int row = adminTable.getSelectedRow();
		int column = adminTable.getSelectedColumn();
		selectedPdt = (String) adminTable.getValueAt(row, 0);
		System.out.println("@@@@@@@@@@@@@@@@" + adminTable.getValueAt(row, 0) +"선택했습니다.");
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseDragged(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseMoved(MouseEvent evt) {
		// TODO Auto-generated method stub
	}
	}
