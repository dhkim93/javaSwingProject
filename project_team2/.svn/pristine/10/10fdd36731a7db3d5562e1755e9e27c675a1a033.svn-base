package com.bs.view;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;

import javax.swing.*;

import com.bs.control.DBUtil;
import com.bs.control.MyCartDAO;
import com.bs.vo.MyCartVO;

import java.awt.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;

public class MyCart extends JFrame {

	JButton buy, del; // Button 선언

	JPanel[] jpan = new JPanel[4];
	JPanel[] jpan_t = new JPanel[4];

	JLabel[] jl = new JLabel[4];
	JLabel[] product = new JLabel[4];
	JLabel[] price = new JLabel[4];
	JLabel label_sumch, label_sum;
	int sum = 0;//합계 저장 변수
	JRadioButton rb1;

	//서버에서 데이터 가져오기 위해 초기화한 변수 2개
	MyCartDAO mcdao = null;
	ArrayList<MyCartVO> list = null;
	//cart에 있는 id값
	String c_id = "deokhyeon";
	
	
	public MyCart() {
		setBounds(new Rectangle(50, 50, 800, 550));

		final ImageIcon icon1 = new ImageIcon("C:\\1.png");
		final ImageIcon icon2 = new ImageIcon("C:\\2.png");
		final ImageIcon icon3 = new ImageIcon("C:\\3.png");

		for (int i = 0; i < 3; i++) {
			jpan[i] = new JPanel();
			jpan[i].setBackground(Color.WHITE);
			getContentPane().add(jpan[i]);
			jpan[i].setLayout(null);
			if (i == 0) {
				jpan[i].setBounds(12, 22, 673, 144);
				jl[i] = new JLabel("1");
				product[i] = new JLabel("");
				jpan_t[i] = new JPanel() {
					public void paintComponent(Graphics g) {
						g.drawImage(icon1.getImage(), 0, 0, null);
						setOpaque(false);
						super.paintComponent(g);
					}
				};
			} else if (i == 1) {
				jpan[i].setBounds(12, 176, 673, 144);
				jl[i] = new JLabel("2");
				product[i] = new JLabel("초록 티 :");
				jpan_t[i] = new JPanel() {
					public void paintComponent(Graphics g) {
						g.drawImage(icon2.getImage(), 0, 0, null);
						setOpaque(false);
						super.paintComponent(g);
					}
				};
			} else if (i == 2) {
				jpan[i].setBounds(12, 330, 673, 144);
				jl[i] = new JLabel("3");
				product[i] = new JLabel("노란 티 :");
				jpan_t[i] = new JPanel() {
					public void paintComponent(Graphics g) {
						g.drawImage(icon3.getImage(), 0, 0, null);
						setOpaque(false);
						super.paintComponent(g);
					}
				};
			}

			jl[i].setBounds(12, 33, 24, 15);
			jpan[i].add(jl[i]);
			
			product[i].setBounds(217, 65, 57, 15);
			jpan[i].add(product[i]);

			price[i] = new JLabel("5000원");
			price[i].setBounds(304, 65, 57, 15);
			jpan[i].add(price[i]);

			rb1 = new JRadioButton("선택");
			rb1.setBackground(Color.WHITE);
			rb1.setBounds(458, 61, 121, 23);
			jpan[i].add(rb1);

			jpan_t[i].setBounds(40, 10, 145, 136);
			jpan[i].add(jpan_t[i]);
			jpan_t[i].setLayout(null);
		}

		buy = new JButton("구매");
		buy.setBounds(270, 5, 68, 23);
		del = new JButton("삭제");
		del.setBounds(371, 5, 68, 23);
		jpan[3] = new JPanel();
		jpan[3].setBounds(12, 484, 728, 33);
		jpan[3].setLayout(null);

		jpan[3].add(buy); // 구매
		jpan[3].add(del); // 지우기
		getContentPane().setLayout(null);
		getContentPane().add(jpan[3]);

		label_sumch = new JLabel("총금액 : ");
		label_sumch.setBounds(584, 5, 48, 15);
		jpan[3].add(label_sumch);

		label_sum = new JLabel("50000원");
		label_sum.setBounds(637, 5, 58, 15);
		jpan[3].add(label_sum);
		
		try {
			mcdao = new MyCartDAO();//서버에서 가져온 값을 쓰기위해 DAO 객체화
			list = mcdao.getCartList(c_id);//cart에 있는 id정보를 가져옴(deokhyoen으로 설정한 것만...)
			
		} catch (Exception e) { 
			System.out.println("e=[" + e + "]");
		}
		//list에 내용이 있을경우 실행
		if (list != null){
			for (int i = 0; i < list.size(); i++) {
			
				product[i].setText(list.get(i).getProduct_name());//제품명을 가져와서 글자를 화면에 뿌려줌
				price[i].setText(list.get(i).getPrice());//가격을 가져와서 글자를 화면에 뿌려줌
				sum +=Integer.parseInt(list.get(i).getPrice());//값을 모두더해서 sum에 저장
			}
			label_sum.setText(sum+"");//총액 화면에 출력
		}
		
		setTitle("장바구니");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setVisible(true);
	}
/*	public void setCartNamePrice(String id) throws Exception{
//		MyDressRoomVO mdrvo = null;
		MyCartDAO mcdao = null;
		//id = "deokhyeon";
		ArrayList<MyCartVO> list = null;
//		HashMap<String, String> product = new HashMap<String, String>();

		
			try {
//				mdrvo = new MyDressRoomVO(id);
				mcdao = new MyCartDAO();
//				mdrvo = mdrdao.getClosetList(id);
				list = mcdao.getCartList(id);
				
			} catch (Exception e) { 
				System.out.println("e=[" + e + "]");
			}
			if (list != null){
//				JOptionPane.showMessageDialog(this, "성공적");
				for (int i = 0; i < list.size(); i++) {
				
					product[i].setText(list.get(i).getProduct_name());
					if(list.get(i).getProductCode().contains("P_CAP")){
						comboBox.addItem(list.get(i).getProductCode());
//						comboBox.addItem(new MyDressRoomVO(list.get(i).getProductCode(), list.get(i).getProductName()));
					}else if(list.get(i).getProductCode().contains("P_UP")){
						comboBox_1.addItem(list.get(i).getProductCode());
					}else if(list.get(i).getProductCode().contains("P_DOWN")){
						comboBox_2.addItem(list.get(i).getProductCode());
					}else if(list.get(i).getProductCode().contains("P_SHOE")){
						comboBox_3.addItem(list.get(i).getProductCode());
					}
				}
			}
			//물품 갯수 표시
			product[0].setText(Integer.toString(comboBox.getItemCount()));
			textField_2.setText(Integer.toString(comboBox_1.getItemCount()));
			textField_3.setText(Integer.toString(comboBox_2.getItemCount()));
			textField_4.setText(Integer.toString(comboBox_3.getItemCount()));
		
	}*/
	public static void main(String[] args) {
		new MyCart();
		/*
		 * ArrayList<String> columnName = new ArrayList<String>(); String sql =
		 * "select * from member"; Connection con = null; Statement stmt = null;
		 * PreparedStatement pstmt = null; ResultSet rs = null; MyCartVO mcvo =
		 * null;
		 * 
		 * try { con = DBUtil.getConnection();
		 * 
		 * stmt = con.createStatement(); rs = stmt.executeQuery(sql);//쿼리실행
		 * 
		 * System.out.println("id\t비번\t이름\t폰번\t플래그\t이메일");
		 * 
		 * while(rs.next()){ System.out.print(rs.getString(1)
		 * +"\t");//rs.get자료형(속성순서 or 속성명) System.out.print(rs.getString(2)
		 * +"\t"); System.out.print(rs.getString(3) +"\t");
		 * System.out.print(rs.getString(4) +"\t");
		 * System.out.print(rs.getInt(5) +"\t");
		 * System.out.print(rs.getString(6) +"\t"); System.out.println(); }
		 * 
		 * 
		 * } catch (SQLException se) { System.out.println(se); } catch
		 * (Exception e) { System.out.println(e); } finally { try { if (rs !=
		 * null) rs.close(); if (pstmt != null) pstmt.close(); if (con != null)
		 * con.close(); } catch (SQLException se) { } }
		 */
	}
}
