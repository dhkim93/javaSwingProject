package com.bs.view;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import com.bs.control.MyDressRoomDAO;
import com.bs.vo.ClosetVO;
import com.bs.vo.MyDressRoomVO;

public class MyDressRoom extends JPanel implements ActionListener {
	
	private JButton button = new JButton("メインに移動");//"메인으로"
	private JComboBox comboBox_1 = new JComboBox();
	private JComboBox comboBox_2 = new JComboBox();
	private JComboBox comboBox_3 = new JComboBox();
	private JComboBox comboBox_4 = new JComboBox();
	private JPanel panel_man = new JPanel();
	private JPanel panel_cap = new JPanel();
	private JPanel panel_up = new JPanel();
	private JPanel panel_down = new JPanel();
	private JPanel panel_shoe = new JPanel();
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JTextField textField_3;
	private JTextField textField_4;
	private String gender = "";
	private Container cPane;
	private ImageIcon img;
	private JLabel ImgBox = new JLabel();
	private JTextField textField_5;
	private JTextField textField_6;
	private JTextField textField_7;
	private JTextField textField_8;

	public MyDressRoom(MainFrame win) {

		setBounds(new Rectangle(0, 0, 900, 600));
		
		setLayout(null);
		
		panel_man.setBackground(Color.WHITE);
		panel_man.setBounds(12, 37, 372, 471);
		
		panel_man.setLayout(null);

		panel_cap.setBackground(Color.WHITE);
		panel_cap.setOpaque(false);
		
		panel_up.setBackground(Color.WHITE);
		panel_up.setOpaque(false);
		
		panel_down.setBackground(Color.WHITE);
		panel_down.setOpaque(false);
		
		panel_shoe.setBackground(Color.WHITE);
		panel_shoe.setOpaque(false);
		
		panel_man.add(panel_cap);
		panel_man.add(panel_up);
		panel_man.add(panel_down);
		panel_man.add(panel_shoe);
//		panel_man.add(ImgBox);

		add(panel_man);

		JPanel panel_6 = new JPanel();
		panel_6.setBounds(471, 477, 372, 42);
		add(panel_6);
		panel_6.setLayout(null);
		
		//메인화면으로 가기 버튼클릭 했을때 
		button.setBounds(224, 10, 136, 23);
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (e.getSource() == button) {
						win.panelChange("LoginPage", MainFrame.id);
					}
				} catch (Exception ex) {
					System.out.println(ex);
				}
			}
		});
		
		panel_6.add(button);

		JPanel panel_7 = new JPanel();
		panel_7.setSize(new Dimension(100, 50));
		panel_7.setBounds(420, 37, 372, 64);
		add(panel_7);
		panel_7.setLayout(null);

		JLabel label_8 = new JLabel("帽子 : ");//"모자 : "
		label_8.setBounds(0, 8, 36, 15);
		panel_7.add(label_8);

		comboBox_1 = new JComboBox();
		comboBox_1.setBounds(62, 5, 130, 21);
		comboBox_1.setMaximumRowCount(20);
		panel_7.add(comboBox_1);

		// 모자 콤보박스 이벤트
		comboBox_1.addActionListener(ie -> {

			JComboBox c = (JComboBox) ie.getSource();
			ClosetVO item = (ClosetVO) c.getSelectedItem();
//			System.out.println(item.getProductCode() + " : " + item.getProductName());
			
			if(item!=null){
				
				try {

					JLabel ImgBoxCap;
					ImageIcon imgCap;
					MyDressRoomDAO mdrdao = new MyDressRoomDAO();
					ArrayList<MyDressRoomVO> list = mdrdao.getImage(item.getProductCode());

					System.out.println(list.size());
					for (int i = 0; i < list.size(); i++) {

						if (item.getProductCode().contains("P_CAP")) {
							
							System.out.println("list.get(i).getImagePath()" + list.get(i).getImagePath());

							imgCap = new ImageIcon(list.get(i).getImagePath());
							ImgBoxCap = new JLabel(imgCap);
							ImgBoxCap.setBounds(0, 0, imgCap.getIconWidth(), imgCap.getIconHeight());

							panel_cap.setBounds(list.get(i).getxAixs(), list.get(i).getyAixs(), 157, 123);
							panel_cap.removeAll();
							panel_cap.setVisible(true);
							panel_cap.add(ImgBoxCap);
							panel_cap.revalidate();
							panel_cap.repaint();
							panel_cap.updateUI();
							
							textField_5.setText(list.get(i).getBuyDate()); //구매일자 입력
							System.out.println("@@@@@@@@@@@@@" +item.getProductCode());
							
						}else if (item.getProductCode().contains("none")) {
							
							panel_cap.setVisible(false); // 아무것도 선택 안했을때
							textField_5.setText("");
							
						}
					}
				} catch (Exception e) {
					System.out.println("e=[" + e + "]");
					e.printStackTrace();
				}
			}

		});

		JLabel label = new JLabel("総 : ");//"총 : "
		label.setBounds(214, 8, 24, 15);
		panel_7.add(label);

		textField_1 = new JTextField();
		textField_1.setBounds(249, 5, 40, 21);
		textField_1.setColumns(10);
		panel_7.add(textField_1);

		JLabel label_4 = new JLabel("個");//"개"
		label_4.setBounds(301, 8, 29, 15);
		panel_7.add(label_4);
		
		JLabel label_13 = new JLabel("購買日 : ");//"구매일자 : "
		label_13.setBounds(0, 39, 72, 15);
		panel_7.add(label_13);
		
		textField_5 = new JTextField();
		textField_5.setBounds(62, 36, 130, 21);
		panel_7.add(textField_5);
		textField_5.setColumns(10);

		JPanel panel_8 = new JPanel();
		panel_8.setSize(new Dimension(100, 50));
		panel_8.setBounds(420, 111, 372, 64);
		add(panel_8);
		panel_8.setLayout(null);

		JLabel label_1 = new JLabel("上着 : ");//"상의 : "
		label_1.setBounds(0, 8, 36, 15);
		panel_8.add(label_1);

		comboBox_2.setBounds(62, 5, 130, 21);
		panel_8.add(comboBox_2);

		// 상의 콤보박스 이벤트
		comboBox_2.addActionListener(ie -> {
			JComboBox c = (JComboBox) ie.getSource();
			ClosetVO item = (ClosetVO) c.getSelectedItem();
//			System.out.println(item.getProductCode() + " : " + item.getProductName());

			if(item!=null){
				try {
					JLabel ImgBoxUp;
					ImageIcon imgUp;
					MyDressRoomDAO mdrdao = new MyDressRoomDAO();
					ArrayList<MyDressRoomVO> list = mdrdao.getImage(item.getProductCode());

					System.out.println(list.size());
					for (int i = 0; i < list.size(); i++) {

						if (item.getProductCode().contains("P_UP")) {

							imgUp = new ImageIcon(list.get(i).getImagePath());
							ImgBoxUp = new JLabel(imgUp);
							ImgBoxUp.setBounds(0, 0, imgUp.getIconWidth(), imgUp.getIconHeight());

							panel_up.setBounds(list.get(i).getxAixs(), list.get(i).getyAixs(), 172, 109);
							panel_up.removeAll();
							panel_up.setVisible(true);
							panel_up.add(ImgBoxUp);
							panel_up.revalidate();
							panel_up.repaint();
							panel_up.updateUI();
							
							textField_6.setText(list.get(i).getBuyDate()); //구매일자 입력 
							
						} else if (item.getProductCode().contains("none")) {
							panel_up.setVisible(false); // 아무것도 선택 안했을때
							textField_6.setText("");
						}
					}
				} catch (Exception e) {
					System.out.println("e=[" + e + "]");
				}
			}
		});

		JLabel label_5 = new JLabel("総 : ");//"총 : "
		label_5.setBounds(214, 8, 24, 15);
		panel_8.add(label_5);

		textField_2 = new JTextField();
		textField_2.setBounds(249, 5, 40, 21);
		textField_2.setColumns(10);
		panel_8.add(textField_2);

		JLabel label_9 = new JLabel("個");//"개"
		label_9.setBounds(301, 8, 36, 15);
		panel_8.add(label_9);
		
		JLabel label_14 = new JLabel("購買日 : ");//"구매일자 : "
		label_14.setBounds(0, 39, 72, 15);
		panel_8.add(label_14);
		
		textField_6 = new JTextField();
		textField_6.setColumns(10);
		textField_6.setBounds(62, 36, 130, 21);
		panel_8.add(textField_6);

		JPanel panel_1 = new JPanel();
		panel_1.setBounds(420, 183, 372, 64);
		add(panel_1);
		panel_1.setLayout(null);
		
		JLabel label_2 = new JLabel("ズボン : ");//"하의 : "
		label_2.setBounds(0, 8, 36, 15);
		panel_1.add(label_2);

		comboBox_3.setBounds(62, 5, 130, 21);
		panel_1.add(comboBox_3);

		// 바지 콤보박스 이벤트
		comboBox_3.addActionListener(ie -> {
			JComboBox c = (JComboBox) ie.getSource();
			ClosetVO item = (ClosetVO) c.getSelectedItem();
//			System.out.println(item.getProductCode() + " : " + item.getProductName());

			if(item!=null){
				try {
					JLabel ImgBoxDown;
					ImageIcon imgDown;
					MyDressRoomDAO mdrdao = new MyDressRoomDAO();
					ArrayList<MyDressRoomVO> list = mdrdao.getImage(item.getProductCode());

					System.out.println(list.size());
					for (int i = 0; i < list.size(); i++) {

						if (item.getProductCode().contains("P_DOWN")) {

							imgDown = new ImageIcon(list.get(i).getImagePath());
							ImgBoxDown = new JLabel(imgDown);
							ImgBoxDown.setBounds(0, 0, imgDown.getIconWidth(), imgDown.getIconHeight());

							panel_down.setBounds(list.get(i).getxAixs(), list.get(i).getyAixs(), 172, 85);
							panel_down.removeAll();
							panel_down.setVisible(true);
							panel_down.add(ImgBoxDown);
							panel_down.revalidate();
							panel_down.repaint();
							panel_down.updateUI();
							
							textField_7.setText(list.get(i).getBuyDate()); //구매일자 입력
							
						} else if (item.getProductCode().contains("none")) {
							panel_down.setVisible(false); // 아무것도 선택 안했을때
							textField_7.setText("");
						}
					}

				} catch (Exception e) {
					System.out.println("e=[" + e + "]");
					e.printStackTrace();
				}
			}
		});

		JLabel label_6 = new JLabel("総 : ");//"총 : "
		label_6.setBounds(214, 8, 24, 15);
		panel_1.add(label_6);

		textField_3 = new JTextField();
		textField_3.setBounds(249, 5, 40, 21);
		textField_3.setColumns(10);
		panel_1.add(textField_3);

		JLabel label_10 = new JLabel("個");//"개"
		label_10.setBounds(301, 8, 31, 15);
		panel_1.add(label_10);
		
		JLabel label_15 = new JLabel("購買日 : ");//"구매일자 : "
		label_15.setBounds(0, 39, 72, 15);
		panel_1.add(label_15);
		
		textField_7 = new JTextField();
		textField_7.setColumns(10);
		textField_7.setBounds(62, 36, 130, 21);
		panel_1.add(textField_7);

		JPanel panel_2 = new JPanel();
		panel_2.setBounds(420, 268, 373, 64);
		add(panel_2);
		panel_2.setLayout(null);

		JLabel label_3 = new JLabel("靴 : ");//"신발 : "
		label_3.setBounds(0, 6, 36, 15);
		panel_2.add(label_3);

		comboBox_4.setBounds(62, 3, 130, 21);
		panel_2.add(comboBox_4);

		// 신발 콤보박스 이벤트
		comboBox_4.addActionListener(ie -> {
			JComboBox c = (JComboBox) ie.getSource();
			ClosetVO item = (ClosetVO) c.getSelectedItem();
			// System.out.println(item.getProductCode() + " : " +
			// item.getProductName());
			System.out.println("靴の変更 ");//"신발 변경 "

			if(item!=null){
				try {
					JLabel ImgBoxShoe;
					ImageIcon imgShoe;
					MyDressRoomDAO mdrdao = new MyDressRoomDAO();
					ArrayList<MyDressRoomVO> list = mdrdao.getImage(item.getProductCode());

					System.out.println(list.size());
					for (int i = 0; i < list.size(); i++) {

						if (item.getProductCode().contains("P_SHOE")) {

							imgShoe = new ImageIcon(list.get(i).getImagePath());
							ImgBoxShoe = new JLabel(imgShoe);
							ImgBoxShoe.setBounds(50, 50, imgShoe.getIconWidth(), imgShoe.getIconHeight());

							panel_shoe.setBounds(list.get(i).getxAixs(), list.get(i).getyAixs(), 176, 200);
							panel_shoe.removeAll();
							panel_shoe.setVisible(true);
							panel_shoe.add(ImgBoxShoe);
							panel_shoe.revalidate();
							panel_shoe.repaint();
							panel_shoe.updateUI();
							
							textField_8.setText(list.get(i).getBuyDate()); //구매일자 입력
							
						} else if (item.getProductCode().contains("none")) { // 아무것도 선택 안했을때
							panel_shoe.setVisible(false);
							textField_8.setText("");
						}
					}

				} catch (Exception e) {
					System.out.println("e=[" + e + "]");
					e.printStackTrace();
				}
			}
		});

		JLabel label_7 = new JLabel("総 : ");//"총 : "
		label_7.setBounds(214, 5, 50, 19);
		panel_2.add(label_7);

		textField_4 = new JTextField();
		textField_4.setColumns(10);
		textField_4.setBounds(248, 5, 40, 21);
		panel_2.add(textField_4);

		JLabel label_11 = new JLabel("個");//"개"
		label_11.setBounds(300, 5, 36, 19);
		panel_2.add(label_11);
		
		JLabel label_16 = new JLabel("購買日 : ");//"구매일자 : "
		label_16.setBounds(0, 39, 72, 15);
		panel_2.add(label_16);
		
		textField_8 = new JTextField();
		textField_8.setColumns(10);
		textField_8.setBounds(62, 36, 130, 21);
		panel_2.add(textField_8);
		
		JLabel label_12 = new JLabel("私のたんす");//"내 옷장"
		label_12.setBounds(12, 10, 120, 15);
		add(label_12);
		
	}//end of const

	public void getMyCloth(String id) throws Exception{ //내 옷장에 있는 옷을 조회한다.

		
		try {
			
			MyDressRoomDAO mdrdao = null;
			ArrayList<MyDressRoomVO> list = null;
			mdrdao = new MyDressRoomDAO();
			System.out.println("@@@@@@@@@@id" + id);
			list = mdrdao.getClosetList(id);

			comboBox_1.removeAllItems(); //기존의 아이템은 제거한다.
			comboBox_2.removeAllItems(); //기존의 아이템은 제거한다.
			comboBox_3.removeAllItems(); //기존의 아이템은 제거한다.
			comboBox_4.removeAllItems(); //기존의 아이템은 제거한다.
			comboBox_1.addItem(new ClosetVO("none", "none"));
			comboBox_2.addItem(new ClosetVO("none", "none"));
			comboBox_3.addItem(new ClosetVO("none", "none"));
			comboBox_4.addItem(new ClosetVO("none", "none"));
			
			if (list.size() != 0){ //구매한 물품이 있으면
				
				gender = list.get(0).getGender(); //성별 입력
				panel_man.remove(ImgBox); //기존에 있던 사람그림은 지운다.

				//성별 선택
				if(gender.equals("2")){ //여성일때
					img = new ImageIcon(".\\src\\img\\girl.png");
					ImgBox = new JLabel(img);
					ImgBox.setBounds(40, 105, 282, 366); //이미지 위치 설정
					panel_man.add(ImgBox);
				}else{
					img = new ImageIcon(".\\src\\img\\boy.png");
					ImgBox = new JLabel(img);
					ImgBox.setBounds(40, 112, 282, 366); //이미지 위치 설정
					panel_man.add(ImgBox);
				}

				for (int i = 0; i < list.size(); i++) { //콤보박스에 요소를 추가시켜준다.
					
					if (list.get(i).getProductCode().contains("P_CAP")) {
						comboBox_1.addItem(new ClosetVO(list.get(i).getProductCode(), list.get(i).getProductName()));
						
					} else if (list.get(i).getProductCode().contains("P_UP")) {
						comboBox_2.addItem(new ClosetVO(list.get(i).getProductCode(), list.get(i).getProductName()));

					} else if (list.get(i).getProductCode().contains("P_DOWN")) {
						comboBox_3.addItem(new ClosetVO(list.get(i).getProductCode(), list.get(i).getProductName()));

					} else if (list.get(i).getProductCode().contains("P_SHOE")) {
						comboBox_4.addItem(new ClosetVO(list.get(i).getProductCode(), list.get(i).getProductName()));
					}
					
				}
			}
			
			// 물품 갯수 표시
			textField_1.setText(Integer.toString(comboBox_1.getItemCount() - 1));
			textField_2.setText(Integer.toString(comboBox_2.getItemCount() - 1));
			textField_3.setText(Integer.toString(comboBox_3.getItemCount() - 1));
			textField_4.setText(Integer.toString(comboBox_4.getItemCount() - 1));
		
		} catch (IndexOutOfBoundsException io) {
			System.out.println(io);
//			JOptionPane.showMessageDialog(null, "구매한 상품이 없습니다.", "알림", 0);
//			return;
		}
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
}
